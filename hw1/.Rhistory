a = 1:10
b = 10:1
c = rep(1, times = 10)
d = 2 ^ (1:10)
set.seed(42)
x = 1:100
y = rnorm(1000)
z = runif(150, min = 0, max = 1)
install.packages("ggplot2")
?library
library(ggplot2)
length(msleep)
library(ggplot2)
msleep
observations = length(msleep)
library(ggplot2)
observations = nrow(msleep)
observations
msleep
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
arrange(msleep, sleep_rem)
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
max(msleep$sleep_rem)
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
which.max(msleep$sleep_rem)
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
msleep[which.max(msleep$sleep_rem)]
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
msleep[which.max(msleep$sleep_rem),]
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
msleep
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
msleep[msleep$vore == "carni"]
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
msleep[msleep$vore == "carni",]
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
msleep[!filter.is_na(msleep$vore)$vore == "carni",]
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
msleep[filter(!is_na(msleep$vore))$vore == "carni",]
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
msleep[filter(!is.na(msleep$vore))$vore == "carni",]
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
filter(!is.na(msleep$vore))
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
filter(!is.na(msleep$vore))
library(ggplot2)
observations = nrow(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
?filter
filter(!is.na(msleep$vore))
filter(msleep$vore, !is.na)
filter(msleep$vore, !is.na())
filter(msleep, !is.na(msleep$vore))
filter(msleep, is.na(msleep$vore))
filter(msleep, !is.na(msleep$vore))
msleep[ , is.na(msleep$vore) == 0]
msleep[ , is.na(msleep$vore) == 0]
msleep[is.na(msleep$vore) == 0, ]
msleep[is.na(msleep$vore) == 0, ][msleep$vore == "carni",]
msleep[is.na(msleep$vore) == 0 && msleep$vore == "carni", ]
msleep[is.na(msleep$vore) == 0 & msleep$vore == "carni", ]
msleep[is.na(msleep$vore) == 0 & msleep$vore == "carni", ]$bodywt
mean(msleep[is.na(msleep$vore) == 0 & msleep$vore == "carni", ]$bodywt)
carnivore_mean_bodyweight = mean(msleep[is.na(msleep$vore) == 0 & msleep$vore == "carni", ]$bodywt)
colnames(msleep)
variables = length(msleep)
names = colnames(msleep)
observations
msleep
library(ggplot2)
observations = nrow(msleep)
names = colnames(msleep)
variables = length(msleep)
mean_hours_rem = mean(msleep$sleep_rem, na.rm=TRUE)
sd_brain_weight = sd(msleep$brainwt, na.rm=TRUE)
name_most_rem_sleep = msleep[which.max(msleep$sleep_rem),]$name
carnivore_mean_bodyweight = mean(msleep[is.na(msleep$vore) == 0 & msleep$vore == "carni", ]$bodywt)
birthwt
MASS$birthwt
MASS
install.packages("MASS")
library(MASS)
birthwt
plot(birthwt$age, birthwt$bwt)
plot(birthwt$age, birthwt$bwt)
plot(birthwt$age, birthwt$bwt, xlab="Birth weight", ylab="Mother's weight")
plot(birthwt$age, birthwt$bwt, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior")
birthwt$age
plot(birthwt$age, birthwt$bwt, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior")
plot(birthwt$age, birthwt$bwt, main="Age-weight behavior")
plot(birthwt$bwt, birthwt$age, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior")
plot(birthwt$bwt, birthwt$age, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior", col="blue")
plot(birthwt$bwt, birthwt$lwt, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior", col="blue")
plot(birthwt$bwt, birthwt$lwt, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior", col="blue")
plot(birthwt$bwt, birthwt$lwt, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior", col="blue")
plot(birthwt$bwt, birthwt$lwt, xlab="Birth weight", ylab="Mother's age", main="Age-weight behavior", col="blue")
birthwt
plot(birthwt$bwt / 0.00220462262185, birthwt$lwt, xlab="Birth weight, grams", ylab="Mother's weight, pounds", main="Age-weight behavior", col="blue")
plot(birthwt$bwt * 0.00220462262185, birthwt$lwt, xlab="Birth weight, grams", ylab="Mother's weight, pounds", main="Age-weight behavior", col="blue")
plot(birthwt$bwt * 0.00220462262185, birthwt$lwt, xlab="Birth weight, pounds", ylab="Mother's weight, pounds", main="Age-weight behavior", col="blue")
plot(birthwt$lwt, birthwt$bwt * 0.00220462262185, xlab="Mother's weight, pounds", ylab="Birth weight, pounds",main="Mother-child weight behavior", col="blue")
plot(birthwt$age, birthwt$bwt * 0.00220462262185, xlab="Mother's age, years", ylab="Birth weight, pounds",main="Mother age - child weight behavior", col="blue")
boxplot(bwt ~ smoke, data=birthwt, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(bwt ~ smoke, data=birthwt, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon", col="blue")
boxplot(bwt ~ smoke, data=birthwt, main="Smoking mother - child weight behavior",
xlab="Mother smoking status", ylab="Child weight, pounds", col="blue")
library(MASS)
birthwt
observations = nrow(birthwt)
names = colnames(birthwt)
variables = length(birthwt)
plot(birthwt$lwt, birthwt$bwt * 0.00220462262185, xlab="Mother's weight, pounds", ylab="Birth weight, pounds",main="Mother-child weight behavior", col="blue")
plot(birthwt$age, birthwt$bwt * 0.00220462262185, xlab="Mother's age, years", ylab="Birth weight, pounds",main="Mother age - child weight behavior", col="blue")
boxplot(bwt ~ smoke, data=birthwt, main="Smoking mother - child weight behavior",
xlab="Mother smoking status", ylab="Child weight, pounds", col="blue")
library(MASS)
birthwt
observations = nrow(birthwt)
names = colnames(birthwt)
variables = length(birthwt)
plot(birthwt$lwt, birthwt$bwt * 0.00220462262185, xlab="Mother's weight, pounds", ylab="Birth weight, pounds",main="Mother-child weight behavior", col="blue")
plot(birthwt$age, birthwt$bwt * 0.00220462262185, xlab="Mother's age, years", ylab="Birth weight, pounds",main="Mother age - child weight behavior", col="blue")
boxplot(bwt ~ smoke, data=birthwt, main="Smoking mother - child weight behavior",
xlab="Mother smoking status", ylab="Child weight, pounds", col="blue")
data1 <- read.csv("nutrition-2018.csv", header=TRUE)
data1
data
data <- read.csv("nutrition-2018.csv", header=TRUE)
data
hist(data$Calories)
hist(data$Calories, main="Calorie values of serving sizes")
hist(data$Calories, main="Calorie values of serving sizes", xlab="Calories")
hist(data$Calories, main="Calorie values of serving sizes", xlab="Calories per meal")
plot(data$Protein, data$Calories, main="Calorie-protein relationship in meals", xlab="Protein in a meal", ylab="Calories in a meal", color="blue")
plot(data$Protein, data$Calories, main="Calorie-protein relationship in meals", xlab="Protein in a meal", ylab="Calories in a meal", col="blue")
plot(4 * data$Protein + 4 * data$Carbs + 9 * data$Fat, data$Calories)
hist(data$Calories, main="Calorie values of serving sizes", xlab="Calories per meal", col="blue")
?I
plot(4 * data$Protein + 4 * data$Carbs + 9 * data$Fat, data$Calories, main="Calorie (expected) vs Clalorie (ground truth)", xlab="Calorie (expected)", ylab="Calorie (ground truth)")
a = 1:10
b = 10:1
c = rep(1, times = 10)
d = 2 ^ (1:10)
sum(x * x)
sum_of_squares = function(x) {
sum(x * x)
}
a = 1:10
b = 10:1
c = rep(1, times = 10)
d = 2 ^ (1:10)
sum_of_squares = function(x) {
sum(x * x)
}
sum_of_squares(x = a)
sum_of_squares(x = c(c, d))
sum_of_squares = function(x) {
x
sum(x * x)
}
sum_of_squares(x = a)
sum_of_squares(x = c(c, d))
sum_of_squares(1:10)
a * a
sum(a * a)
sum_of_squares = function(x) {
sum(x * x)
}
sum_of_squares(x = a)
sum_of_squares(x = c(c, d))
sum_of_squares(x = a)
sum_of_squares(x = c(c, d))
sum_of_squares = function(x) {
sum(x * x)
}
sum_of_squares(x = a)
sum_of_squares(x = c(c, d))
d
d- 0
sum_of_squares(d - 0)
sum_of_squares(d - 0) / length(d)
sqrt(sum_of_squares(d - 0) / length(d))
```{r}
sqrt(sum_of_squares(d - 0) / length(d))
sqrt(sum_of_squares(a - b) / length(a))
x = 1:100
set.seed(42)
x = 1:100
y = rnorm(1000)
z = runif(150, min = 0, max = 1)
list(small, large)
list_extreme_values = function(x, k = 2) {
small = x < mean(x) - k * sd(x)
large = x > mean(x) - k * sd(x)
list(small, large)
}
list_extreme_values(x = x, k = 1)
list_extreme_values(x = y, k = 3)
list_extreme_values(x = y, k = 2)
list_extreme_values(x = z, k = 1.5)
list_extreme_values = function(x, k = 2) {
small = x[x < mean(x) - k * sd(x)]
large = x[x > mean(x) - k * sd(x)]
list(small, large)
}
list_extreme_values(x = x, k = 1)
list_extreme_values(x = y, k = 3)
list_extreme_values(x = y, k = 2)
list_extreme_values(x = z, k = 1.5)
list_extreme_values(x = x, k = 1)
small
list_extreme_values = function(x, k = 2) {
small = x[x < mean(x) - k * sd(x)]
large = x[x > mean(x) - k * sd(x)]
list(small, large)
}
x = 1:100
small = x[x < mean(x) - 1 * sd(x)]
small
list_extreme_values = function(x, k = 2) {
small = x[x < mean(x) - k * sd(x)]
large = x[x > mean(x) - k * sd(x)]
list(small, large)
}
x = 1:100
mean(x)
small = x[x < mean(x) - 1 * sd(x)]
small
list_extreme_values = function(x, k = 2) {
small = x[x < mean(x) - k * sd(x)]
large = x[x > mean(x) - k * sd(x)]
list(small, large)
}
x = 1:100
mean(x)
sd(x)
small = x[x < mean(x) - 1 * sd(x)]
small
list_extreme_values = function(x, k = 2) {
small = x[x < mean(x) - k * sd(x)]
large = x[x > mean(x) + k * sd(x)]
list(small, large)
}
list_extreme_values(x = x, k = 1)
list_extreme_values(x = y, k = 3)
list_extreme_values(x = y, k = 2)
list_extreme_values(x = z, k = 1.5)
list_extreme_values(x = y, k = 1.5)
list_extreme_values(x = y, k = 1.5)[2]
mean(list_extreme_values(x = y, k = 1.5)[2])
list_extreme_values(x = y, k = 1.5)[2]
list_extreme_values(x = y, k = 1.5)[[2]]
mean(list_extreme_values(x = y, k = 1.5)[[2]])
sd(y)
mean(list_extreme_values(x = y, k = 1.5)[[2]])
mean(y)
sd(y)
mean(list_extreme_values(x = y, k = 1.5)[[2]])
list_extreme_values(x = y, k = 1.5)[[2]]
mean(y)
sd(y)
list_extreme_values(x = y, k = 1.5)[[2]]
mean(list_extreme_values(x = y, k = 1.5)[[2]])
```{r}
mean(list_extreme_values(x = y, k = 1.5)[[2]])
